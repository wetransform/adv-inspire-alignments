<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<alignment xmlns="http://www.esdi-humboldt.eu/hale/alignment">
    <base prefix="ba1" location="aaa-au-basis.halex.alignment.xml"/>
    <base prefix="ba2" location="../base-functions.halex.alignment.xml"/>
    <cell relation="eu.esdihumboldt.cst.functions.groovy.join" id="C4f27722b-b7cc-4398-ba92-d41c55ad5eee" priority="low">
        <source name="types">
            <class>
                <type name="AX_BundeslandType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <source name="types">
            <class>
                <type name="AX_Gebiet_BundeslandType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <target>
            <class>
                <type name="AdministrativeUnitType" ns="http://inspire.ec.europa.eu/schemas/au/4.0"/>
            </class>
        </target>
        <complexParameter name="join">
            <jp:join-parameter xmlns:jp="http://www.esdi-humboldt.eu/hale/join">
                <class>
                    <type name="AX_BundeslandType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <class>
                    <type name="AX_Gebiet_BundeslandType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <jp:condition>
                    <property>
                        <type name="AX_BundeslandType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="schluesselGesamt" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                    <property>
                        <type name="AX_Gebiet_BundeslandType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="schluesselGesamt" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                </jp:condition>
            </jp:join-parameter>
        </complexParameter>
        <complexParameter name="script">
            <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
// alle Eigenschaften mit Geometrien aus AX_Gebiet_Bundesland
def geoms = _.geom.findPolygons(_source.links.AX_Gebiet_Bundesland.p.position.list())

// führe den Join nicht aus wenn kein assoziiertes
// AX_Gebiet_Bundesland mit entsprechender Geometrie
// vorhanden ist
if (!geoms) {
	throw new NoResultException()
}

def collect
withTransformationContext {
	collect = _.context.collector(it)
}
def _id = 'AdministrativeUnit_' + _source.p.schluesselGesamt.value()

_target{
	geometry {
		MultiSurface( geoms[0] )
	}
	// gesammelte lowerLevelUnits
	collect.land[_id].each { lowerId -&gt;
		lowerLevelUnit {
			href( "#$lowerId" )
		}
	}
}
</core:text>
        </complexParameter>
        <documentation>Erstellt eine `AdministrativeUnit` aus einem `AX_Bundesland`.
Die Geometrie wird aus dem über den Gesamtschlüssel verknüpften `AX_Gebiet_Bundesland` übernommen.

Die Verknüpfung zur untergeordneten Ebene von `AdministrativeUnit`s wird über die im Index gesammelten Informationen hergestellt.</documentation>
    </cell>
    <cell relation="eu.esdihumboldt.cst.functions.groovy.join" id="Cee67d256-2126-40f1-8782-bc5e35765a10" priority="high">
        <source name="types">
            <class>
                <type name="AX_KreisRegionType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <source name="types">
            <class>
                <type name="AX_Gebiet_KreisType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <target>
            <class>
                <type name="AdministrativeUnitType" ns="http://inspire.ec.europa.eu/schemas/au/4.0"/>
            </class>
        </target>
        <complexParameter name="join">
            <jp:join-parameter xmlns:jp="http://www.esdi-humboldt.eu/hale/join">
                <class>
                    <type name="AX_KreisRegionType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <class>
                    <type name="AX_Gebiet_KreisType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <jp:condition>
                    <property>
                        <type name="AX_KreisRegionType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="schluesselGesamt" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                    <property>
                        <type name="AX_Gebiet_KreisType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="schluesselGesamt" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                </jp:condition>
            </jp:join-parameter>
        </complexParameter>
        <complexParameter name="script">
            <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
// alle Eigenschaften mit Geometrien aus AX_Gebiet_Kreis
def geoms = _.geom.findPolygons(_source.links.AX_Gebiet_Kreis.p.position.list())

// führe den Join nicht aus wenn kein assoziiertes
// AX_Gebiet_Kreis mit entsprechender Geometrie
// vorhanden ist
if (!geoms) {
	throw new NoResultException()
}

def collect
withTransformationContext {
	collect = _.context.collector(it)
}
def _id = 'AdministrativeUnit_' + _source.p.schluesselGesamt.value()

// bestimme upperLevelUnit, sammle ID
def land = _source.p.schluessel.AX_Kreis_Schluessel.land.value()
def regBezirk = _source.p.schluessel.AX_Kreis_Schluessel.regierungsbezirk.value()
def upperLevelUnit
if (regBezirk &amp;&amp; regBezirk != '0') {
	upperLevelUnit = 'AdministrativeUnit_' + land + regBezirk
	collect.regBezirk[upperLevelUnit] &lt;&lt; _id
}
else {
	upperLevelUnit = 'AdministrativeUnit_' + land
	collect.land[upperLevelUnit] &lt;&lt; _id
}

_target{
	geometry {
		MultiSurface( geoms[0] )
	}
	_b.upperLevelUnit {
		href( "#$upperLevelUnit" )
	}
	// gesammelte lowerLevelUnits
	collect.kreis[_id].each { lowerId -&gt;
		lowerLevelUnit {
			href( "#$lowerId" )
		}
	}
}
</core:text>
        </complexParameter>
        <documentation>Erstellt eine `AdministrativeUnit` aus einem `AX_KreisRegion`.
Die Geometrie wird aus dem über den Gesamtschlüssel verknüpften `AX_Gebiet_Kreis` übernommen.

Die Verknüpfung zur untergeordneten Ebene von `AdministrativeUnit`s wird über die im Index gesammelten Informationen hergestellt.

Die Information über die Zugehörigkeit zur übergeordneten `AdministrativeUnit` (Bundesland oder Regierungsbezirk) wird im Index hinterlegt.</documentation>
    </cell>
    <cell relation="eu.esdihumboldt.cst.functions.groovy.join" id="C1c3a0ce9-5605-4868-a6af-c9acbc1d41f2" priority="lower">
        <source name="types">
            <class>
                <type name="AX_Gebiet_NationalstaatType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <source name="types">
            <class>
                <type name="AX_NationalstaatType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <target>
            <class>
                <type name="AdministrativeUnitType" ns="http://inspire.ec.europa.eu/schemas/au/4.0"/>
            </class>
        </target>
        <complexParameter name="join">
            <jp:join-parameter xmlns:jp="http://www.esdi-humboldt.eu/hale/join">
                <class>
                    <type name="AX_NationalstaatType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <class>
                    <type name="AX_Gebiet_NationalstaatType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <jp:condition>
                    <property>
                        <type name="AX_NationalstaatType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="schluesselGesamt" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                    <property>
                        <type name="AX_Gebiet_NationalstaatType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="schluesselGesamt" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                </jp:condition>
            </jp:join-parameter>
        </complexParameter>
        <complexParameter name="script">
            <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
// alle Eigenschaften mit Geometrien aus AX_Gebiet_Nationalstaat
def geoms = _.geom.findPolygons(_source.links.AX_Gebiet_Nationalstaat.p.position.list())

// führe den Join nicht aus wenn kein assoziiertes
// AX_Gebiet_Nationalstaat mit entsprechender Geometrie
// vorhanden ist
if (!geoms) {
	throw new NoResultException()
}

_target{
	geometry {
		MultiSurface( geoms[0] )
	}
}
</core:text>
        </complexParameter>
        <documentation>Erstellt eine `AdministrativeUnit` aus einem `AX_Nationalstaat`.
Die Geometrie wird aus dem über den Gesamtschlüssel verknüpften `AX_Gebiet_Nationalstaat` übernommen.</documentation>
    </cell>
    <cell relation="eu.esdihumboldt.cst.functions.groovy.join" id="Ce8f2105f-67d0-4cd2-87f1-77d476bc19d2" priority="normal">
        <source name="types">
            <class>
                <type name="AX_RegierungsbezirkType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <source name="types">
            <class>
                <type name="AX_Gebiet_RegierungsbezirkType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <target>
            <class>
                <type name="AdministrativeUnitType" ns="http://inspire.ec.europa.eu/schemas/au/4.0"/>
            </class>
        </target>
        <complexParameter name="join">
            <jp:join-parameter xmlns:jp="http://www.esdi-humboldt.eu/hale/join">
                <class>
                    <type name="AX_RegierungsbezirkType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <class>
                    <type name="AX_Gebiet_RegierungsbezirkType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <jp:condition>
                    <property>
                        <type name="AX_RegierungsbezirkType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="schluesselGesamt" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                    <property>
                        <type name="AX_Gebiet_RegierungsbezirkType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="schluesselGesamt" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                </jp:condition>
            </jp:join-parameter>
        </complexParameter>
        <complexParameter name="script">
            <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
// alle Eigenschaften mit Geometrien aus AX_Gebiet_Regierungsbezirk
def geoms = _.geom.findPolygons(_source.links.AX_Gebiet_Regierungsbezirk.p.position.list())

// führe den Join nicht aus wenn kein assoziiertes
// AX_Gebiet_Regierungsbezirk mit entsprechender Geometrie
// vorhanden ist
if (!geoms) {
	throw new NoResultException()
}

def collect
withTransformationContext {
	collect = _.context.collector(it)
}
def _id = 'AdministrativeUnit_' + _source.p.schluesselGesamt.value()

// bestimme upperLevelUnit, sammle ID
def upperLevelUnit = 'AdministrativeUnit_' + _source.p.schluessel.AX_Regierungsbezirk_Schluessel.land.value()
collect.land[upperLevelUnit] &lt;&lt; _id

_target{
	geometry {
		MultiSurface( geoms[0] )
	}
	_b.upperLevelUnit {
		href( "#$upperLevelUnit" )
	}
	// gesammelte lowerLevelUnits
	collect.regBezirk[_id].each { lowerId -&gt;
		lowerLevelUnit {
			href( "#$lowerId" )
		}
	}
}
</core:text>
        </complexParameter>
        <documentation>Erstellt eine `AdministrativeUnit` aus einem `AX_Regierungsbezirk`.
Die Geometrie wird aus dem über den Gesamtschlüssel verknüpften `AX_Gebiet_Regierungsbezirk` übernommen.

Die Verknüpfung zur untergeordneten Ebene von `AdministrativeUnit`s wird über die im Index gesammelten Informationen hergestellt.

Die Information über die Zugehörigkeit zur übergeordneten `AdministrativeUnit` (Bundesland) wird im Index hinterlegt.</documentation>
    </cell>
    <cell relation="eu.esdihumboldt.cst.functions.groovy.join" id="C57c48859-e9d2-433b-8286-b12437dde792" priority="highest">
        <source name="types">
            <class>
                <type name="AX_VerwaltungsgemeinschaftType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <source name="types">
            <class>
                <type name="AX_Gebiet_VerwaltungsgemeinschaftType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <source name="types">
            <class>
                <type name="AX_GemeindeType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <target>
            <class>
                <type name="AdministrativeUnitType" ns="http://inspire.ec.europa.eu/schemas/au/4.0"/>
            </class>
        </target>
        <complexParameter name="join">
            <jp:join-parameter xmlns:jp="http://www.esdi-humboldt.eu/hale/join">
                <class>
                    <type name="AX_VerwaltungsgemeinschaftType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <class>
                    <type name="AX_Gebiet_VerwaltungsgemeinschaftType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <class>
                    <type name="AX_GemeindeType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <jp:condition>
                    <property>
                        <type name="AX_VerwaltungsgemeinschaftType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="schluesselGesamt" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                    <property>
                        <type name="AX_Gebiet_VerwaltungsgemeinschaftType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="schluesselGesamt" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                </jp:condition>
                <jp:condition>
                    <property>
                        <type name="AX_VerwaltungsgemeinschaftType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="identifier" ns="http://www.opengis.net/gml/3.2"/>
                    </property>
                    <property>
                        <type name="AX_GemeindeType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="istTeilVon" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="href" ns="http://www.w3.org/1999/xlink"/>
                    </property>
                </jp:condition>
            </jp:join-parameter>
        </complexParameter>
        <complexParameter name="script">
            <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
// alle Eigenschaften mit Geometrien aus AX_Gebiet_Verwaltungsgemeinschaft
def geoms = _.geom.findPolygons(_source.links.AX_Gebiet_Verwaltungsgemeinschaft.p.position.list())

// führe den Join nicht aus wenn kein assoziiertes
// AX_Gebiet_Verwaltungsgemeinschaft mit entsprechender Geometrie
// vorhanden ist
if (!geoms) {
	throw new NoResultException()
}

// Schlüssel für alle Gemeinden der Gemeinschaft
def gemeinden = _source.links.AX_Gemeinde.p.schluesselGesamt.values()

// bestimme upperLevelUnit
def upperLevelUnit = 'AdministrativeUnit_' + _source.p.schluesselGesamt.value()[0..4]

_target{
	geometry {
		MultiSurface( geoms[0] )
	}
	// Verweis auf Gemeinden
	gemeinden.each { gem -&gt;
		lowerLevelUnit {
			href( "#AdministrativeUnit_$gem" )
		}
	}
	_b.upperLevelUnit {
		href( "#$upperLevelUnit" )
	}
}

withTransformationContext {
	def collect = _.context.collector(it)
	def _id = 'AdministrativeUnit_' + _source.p.id.value()
	// Hinterlege ID je Gemeinde
	gemeinden.each {
		collect.verwaltungsGemeinschaft['AdministrativeUnit_' + it] = _id
	}
	// Sammle ID für Kreis/Region
	collect.kreis[upperLevelUnit] &lt;&lt; _id
}
</core:text>
        </complexParameter>
        <documentation>Erstellt eine `AdministrativeUnit` aus einem `AX_Verwaltungsgemeinschaft`.
Die Geometrie wird aus dem über den Gesamtschlüssel verknüpften `AX_Gebiet_Verwaltungsgemeinschaft` übernommen.

Die zur Verwaltungsgemeinschaft zugehörigen Gemeinden werden über `bestehtAus` bestimmt.
Jede der Gemeinden wird als `lowerLevelUnit` referenziert und im Index wird die Information hinterlegt, dass die Gemeinde zu dieser Verwaltungsgemeinschaft gehört.

Die Information über die Zugehörigkeit zur übergeordneten `AdministrativeUnit` (Kreis) wird ebenfalls im Index hinterlegt.</documentation>
    </cell>
    <cell relation="eu.esdihumboldt.cst.functions.groovy.join" id="C3823af02-cf04-4228-9345-7be0c5d0602e" priority="higher">
        <source name="types">
            <class>
                <type name="AX_GemeindeType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <source name="types">
            <class>
                <type name="AX_KommunalesGebietType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
            </class>
        </source>
        <target>
            <class>
                <type name="AdministrativeUnitType" ns="http://inspire.ec.europa.eu/schemas/au/4.0"/>
            </class>
        </target>
        <complexParameter name="join">
            <jp:join-parameter xmlns:jp="http://www.esdi-humboldt.eu/hale/join">
                <class>
                    <type name="AX_GemeindeType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <class>
                    <type name="AX_KommunalesGebietType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                </class>
                <jp:condition>
                    <property>
                        <type name="AX_GemeindeType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="AX_Gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="gemeinde" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                    <property>
                        <type name="AX_KommunalesGebietType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="AX_Gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="gemeinde" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                </jp:condition>
                <jp:condition>
                    <property>
                        <type name="AX_GemeindeType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="AX_Gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="kreis" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                    <property>
                        <type name="AX_KommunalesGebietType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="AX_Gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="kreis" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                </jp:condition>
                <jp:condition>
                    <property>
                        <type name="AX_GemeindeType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="AX_Gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="land" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                    <property>
                        <type name="AX_KommunalesGebietType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="AX_Gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="land" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                </jp:condition>
                <jp:condition>
                    <property>
                        <type name="AX_GemeindeType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="AX_Gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="regierungsbezirk" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                    <property>
                        <type name="AX_KommunalesGebietType" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="AX_Gemeindekennzeichen" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                        <child name="regierungsbezirk" ns="http://www.adv-online.de/namespaces/adv/gid/6.0"/>
                    </property>
                </jp:condition>
            </jp:join-parameter>
        </complexParameter>
        <complexParameter name="script">
            <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
// alle Eigenschaften mit Geometrien aus Kommunalem Gebiet
def geoms = _.geom.findPolygons(_source.links.AX_KommunalesGebiet.p.position.list())

// führe den Join nicht aus wenn kein assoziiertes Kommunales
// Gebiet vorhanden ist mit entsprechender Geometrie
// vorhanden ist
if (!geoms) {
	throw new NoResultException()
}

// bestimmte upper level unit (Verwaltungsgemeinschaft oder Kreis)
def collect
withTransformationContext {
	collect = _.context.collector(it)
}
def _id = 'AdministrativeUnit_' + _source.p.schluesselGesamt.value()
// hinterlegte Verwaltungsgemeinschaft
def upperLevelUnit = collect.verwaltungsGemeinschaft[_id].value()
if (!upperLevelUnit) {
	// Kreis/Region
	def land = _source.p.gemeindekennzeichen.AX_Gemeindekennzeichen.land.value()
	def regBezirk = _source.p.gemeindekennzeichen.AX_Gemeindekennzeichen.regierungsbezirk.value()?:'0'
	def kreis = _source.p.gemeindekennzeichen.AX_Gemeindekennzeichen.kreis.value()
	
	upperLevelUnit =  "AdministrativeUnit_${land}${regBezirk}${kreis}"
	
	// Sammle ID für Kreis/Region
	collect.kreis[upperLevelUnit] &lt;&lt; _id
}

_target{
	geometry {
		MultiSurface( _.geom.aggregate(geoms) )
	}
	_b.upperLevelUnit {
		href( "#${upperLevelUnit}" )
	}
}
</core:text>
        </complexParameter>
        <documentation>Erstellt eine `AdministrativeUnit` aus einer `AX_Gemeinde`.
Die Geometrie wird aus dem über den Gesamtschlüssel verknüpften `AX_KommunalesGebiet` übernommen. Nur falls eine Geometrie gefunden werden kann wird eine eine `AdministrativeUnit` erstellt.

Über den Index wird bestimmt ob die Gemeinde zu einer Verwaltungsgemeinschaft gehört. Diese wird als `upperLevelUnit` referenziert.
Falls keine Zugehörigkeit zu einer Verwaltungsgemeinschaft besteht wird die Zugehörigkeit zur übergeordneten `AdministrativeUnit` (in diesem Fall *Kreis*) im Index hinterlegt.</documentation>
    </cell>
</alignment>
